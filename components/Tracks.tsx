"use client"; // Directiva necesaria para usar hooks de estado en Next.js App Router

import React, { useState } from 'react';
import TrackModal from './TrackModal'; // Importamos el nuevo componente modal

// Estructura de datos ampliada con los detalles de los documentos
const tracksData = [
  {
    title: "Checador Inteligente",
    company: "ITLAC",
    description: "Automatiza el registro de la asistencia del personal con una app m√≥vil usando geolocalizaci√≥n, eliminando la necesidad de un reloj checador f√≠sico.",
    icon: "üì±",
    details: {
      objetivo: "Que el proceso de checada de entrada y salida del personal sea un proceso automatizado, mediante una aplicaci√≥n que haga uso de las nuevas tecnolog√≠as, no se dependa de un reloj checador.",
      especificaciones: [
        "Utilizar un dispositivo m√≥vil en el cual, mediante una aplicaci√≥n, el personal registre su asistencia.",
        "La aplicaci√≥n debe de conectar con la base de datos del SII, y su horario actual.",
        "Se registe su asistencia tomando en cuenta su geolocalizaci√≥n.",
        "Si no esta dentro de la red o dentro del √°rea del ITLAC no se le permita checar."
      ],
      solucion: "Soluci√≥n innovadora que mejor el proceso del registro de checadas y salidas, control de asistencia de una instituci√≥n o empresas, con esto se evita de contar con checadores por √°reas que requieren inversi√≥n y adecuaci√≥n de instalaciones o vandalismo.",
      motivacion: "En la actualidad los relojes checadores digitales con tecnolog√≠a biom√©trica se tiene que conectar a la energ√≠a el√©ctrica, y a la red cableada, en circunstancia en donde no exista energ√≠a en el √°rea donde esta el checador o la red presente falla, no se puede realizar el registro de la entrada o salida, o se tiene que recurrir al proceso antiguo que es anotarse en una libreta que luego se extrav√≠a o no se registra adecuamente.",
      entregables: [
        "Fase 1: Conceptualizaci√≥n de la idea y justificaci√≥n de la soluci√≥n.",
        "Fase 2: Prototipo de la soluci√≥n, demostrar como se registrara y tomara la geolocalizaci√≥n del dispositivo, o como se tomara la ubicaci√≥n de la persona en la instalaci√≥n.",
        "Fase 3: Presentaci√≥n de la solucion."
      ],
      recursos: ["Actualmente ya se cuenta con la infraestructura de red, y las nuevas tecnolog√≠as para dar soluci√≥n a la problem√°tica."],
      evaluacion: ["Se evalua la propuesta de soluci√≥n, asi como la innovaci√≥n de la soluci√≥n y que tan f√°cil seria la implementaci√≥n."]
    }
  },
  {
    title: "Bona Pizza Experience",
    company: "Bona Pizza",
    description: "Optimiza la atenci√≥n a clientes en el restaurante. Crea una app para que los clientes ordenen, pidan la cuenta y m√°s desde su mesa.",
    icon: "üçï",
    details: {
      objetivo: "Obtimizacion de los tiempos de atenci√≥n de meseros a comensales del restaurante BONA PIZZA mediante el uso de dispositivos m√≥viles.",
      especificaciones: ["Se puede utilizar herramientas para desarrollo de aplicaciones m√≥viles, que funcione en por lo menos con Sistemas Operativos Android."],
      solucion: "Soluciones que mejoren el proceso de atenci√≥n existente de parte de los meseros a las peticiones de los comensales.",
      motivacion: "El objetivo de este proyecto es eficientar el proceso de atenci√≥n de los meseros a las peticiones de los comensales. Problem√°tica: Las peticiones mas comunes que hacen los comensales son: Pedir: El Men√∫, la cuenta, servilletas, cubiertos, salsas, retirar platos, limpiar la mesa. Actualmente cuando un comensal llega al restaurante, se enfrenta con las siguientes complicaciones con la atenci√≥n del mesero: Esperar a que un mesero lo vea o lo escuche para ser atendido, lo cual en algunas ocasiones se complica si hay muchos comensales, si el restaurante es grande o si hay pocos meseros atendiendo. Cuando el mesero lo ve, tiene que desplazarse a la mesa para ver que necesita el comensal, lo que implica mas tiempo para atender la solicitud del comensal. En ocasiones los comensales al ver que no hay una eficiente atenci√≥n de los meseros, prefieren desistir de la petici√≥n a tener que esperar a que un mesero los vea y llegue a su mesa para ser atendido.",
      entregables: [
          "Fase 1: Idea de soluci√≥n, Maqueta de la APP propuestas.",
          "Fase 2: EDT, Estructura de los datos almacenados en: Bases de Datos Relacional y/o NoSQL.",
          "Fase 3: Entrega de prototipo con funcionalidades b√°sicas."
      ],
      recursos: [
          "Computadora de escritorio.",
          "Smart phone para meseros y encargados.",
          "Red de √°rea local al√°mbrica e inal√°mbrica.",
          "Servicio de internet de 100 mbps."
      ],
      evaluacion: [
          "Creatividad en el uso de la tecnolog√≠a (que tecnolog√≠a ocup√≥ para la resoluci√≥n del problema).",
          "Viabilidad de implementaci√≥n (ver que la propuesta de soluci√≥n sea tecnol√≥gica y econ√≥micamente viable ).",
          "Funcionalidad del prototipo (que el proyecto contemple todas las funcionalidades solicitadas)."
      ]
    }
  },
 {
  title: "Reconocimiento de n√∫meros de corredores (BIB)",
  company: "ITLAC",
  description: "Sistema integral para reconocimiento autom√°tico de dorsales (BIB), cronometraje en tiempo real y generaci√≥n de resultados y premiaciones por categor√≠as.",
  icon: "üèÉ‚Äç‚ôÇÔ∏è",
  details: {
    objetivo: "Plantea un sistema integral para reconocer autom√°ticamente los n√∫meros de corredor (BIB) en una carrera atl√©tica, registrar tiempos de paso y meta en tiempo real, y calcular la premiaci√≥n por categor√≠as. La soluci√≥n combina visi√≥n por computadora (detecci√≥n/lectura de BIB), cronometraje electr√≥nico y un backend que consolida resultados, valida penalizaciones y emite reportes oficiales.",
    especificaciones: [
      "Captura: c√°maras en arco de salida/meta (60‚Äì120 fps recomendado para foto-finish) y puntos intermedios.",
      "Procesamiento: servicio de visi√≥n por computadora (OpenCV + detector de BIB; OCR con Tesseract/CRNN).",
      "Backend: API REST (Node.js/Express o PHP/Laravel) + base de datos MySQL/MariaDB.",
      "Tiempo real: WebSockets (Socket.IO) para actualizar tablero en vivo.",
      "Panel web: React/Vue/Bootstrap con dashboards, resultados y control de jueces.",
      "Opcional: App m√≥vil para jueces (validaciones manuales, correcciones, marcar DNF/DQ).",
      "Sincronizaci√≥n temporal: NTP en c√°maras y servidores para consistencia de timestamps."
    ],
    solucion: "Registro y Control de Corredores y Reconocimiento de BIB mediante visi√≥n por computadora y OCR: alta masiva/individual de corredores, detecci√≥n de regi√≥n del BIB (YOLO/SSD o heur√≠sticas), OCR sobre la regi√≥n (Tesseract/CRNN), desambiguaci√≥n contra lista v√°lida de dorsales y ventana anti-duplicado para evitar lecturas repetidas.",
    motivacion: "El desarrollo de este proyecto responde a la necesidad de contar con un sistema moderno, preciso y automatizado de cronometraje en carreras atl√©ticas. Los m√©todos tradicionales con cron√≥metros manuales o chips RFID suelen implicar altos costos, complejidad log√≠stica o errores humanos. Con visi√≥n por computadora y reconocimiento de patrones se reduce costo y error, se agiliza la entrega de resultados y se aumenta la transparencia del evento. Adem√°s el proyecto es escalable a otros eventos masivos, fomentando la innovaci√≥n tecnol√≥gica aplicada al deporte.",
    entregables: [
      "Fase 1: Idea y Justificaci√≥n ‚Äî Requerimientos, dise√±o de arquitectura y modelo de datos.",
      "Fase 2: Prototipo inicial ‚Äî M√≥dulo de detecci√≥n de dorsales (pruebas en im√°genes est√°ticas) y base de datos de corredores.",
      "Fase 3: Cronometraje y Control ‚Äî Integraci√≥n de c√°maras en tiempo real, registro de tiempos (gun y chip), sincronizaci√≥n NTP y API para almacenar detecciones.",
      "Fase 4: Clasificaci√≥n y Resultados ‚Äî Reglas de categor√≠as, ranking por rama y edad, generaci√≥n autom√°tica de podios y reportes preliminares.",
      "Fase 5: Entregable final / Demo ‚Äî Tablero en vivo, generaci√≥n de constancias (PDF/Excel con QR) y simulacro en tiempo real."
    ],
    recursos: [
      "C√°maras de alta resoluci√≥n (1080p‚Äì4K) con capacidad de 60‚Äì120 fps para arcos y puntos de control.",
      "Servidor local o en la nube (GPU opcional) para procesamiento de im√°genes.",
      "Conectividad estable (LAN/Wi-Fi/4G/5G) para transmisi√≥n en tiempo real.",
      "Software: Python (OpenCV, TensorFlow/PyTorch), Tesseract/CRNN, Node.js/Express o PHP/Laravel, MySQL/MariaDB.",
      "Frontend: React o Vue con Bootstrap para dashboards; Socket.IO para tiempo real.",
      "Equipo humano: desarrolladores en visi√≥n por computadora y backend, t√©cnicos de instalaci√≥n de c√°maras, jueces y voluntarios para validaci√≥n.",
      "Herramientas adicionales: generador de PDF/Excel, librer√≠as para QR, manuales de operaci√≥n y datasets de dorsales de prueba."
    ],
    evaluacion: [
      "Creatividad e innovaci√≥n: uso de visi√≥n por computadora y OCR frente a m√©todos tradicionales.",
      "Funcionalidad del prototipo: precisi√≥n en reconocimiento de dorsales, registro correcto de tiempos (salida, parciales, meta) y generaci√≥n de reportes.",
      "Enfoque centrado en usuarios: facilidad de uso para organizadores, jueces y corredores; claridad del tablero en vivo.",
      "Factibilidad t√©cnica y econ√≥mica: capacidad de implementaci√≥n y escalabilidad seg√∫n n√∫mero de corredores y puntos de control.",
      "Impacto y valor agregado: transparencia en resultados, reducci√≥n de costos y posibilidad de r√©plica en otros eventos.",
      "Calidad de la presentaci√≥n: demostraci√≥n en simulacro, evidencia en tiempo real y documentaci√≥n clara."
    ],
    tipoDeSolucion: [
      "Registro de corredores: alta por lote (CSV) o individual (nombre, sexo, fecha de nacimiento, categor√≠a, distancia, n√∫mero BIB, equipo).",
      "Validaciones: identidad, asignaci√≥n de kit, estatus (pagado, entregado, DNS, DNF, DQ).",
      "Reconocimiento BIB: detecci√≥n (YOLO/SSD o heur√≠sticas), OCR sobre regi√≥n, verificaci√≥n por Levenshtein/regex y anti-duplicado temporal.",
      "Cronometraje y puntos de control: registro de timestamps por BIB, gun time vs chip time, sincronizaci√≥n NTP.",
      "Clasificaci√≥n y premiaci√≥n: c√°lculo de tiempos netos, ranking por categor√≠a y rama; empates resueltos por fotofinish.",
      "Tablero y reportes: vista de pasos por puntos de control, alertas, exportaci√≥n a PDF/Excel/CSV y publicaci√≥n v√≠a API."
    ],
    descripcionTrack: "El proyecto avanza por fases con entregables claros: dise√±o y justificaci√≥n, prototipo de detecci√≥n, integraci√≥n de cronometraje en tiempo real, reglas de clasificaci√≥n y tablero en vivo, finalizando con demo funcional y generaci√≥n de constancias verificables por QR.",
    mentoresJurado: "Se sugiere conformar un panel mixto de mentores y jurado con experiencia en visi√≥n por computadora, desarrollo backend, cronometraje deportivo y organizaci√≥n de eventos atl√©ticos.",
    terminosYCondiciones: {
      duracionReto: "Duraci√≥n del reto: 12 horas continuas desde el banderazo oficial hasta la hora de cierre establecida por el comit√©.",
      entrega: "Cada equipo entregar√° un prototipo o demo que muestre reconocimiento de dorsales, registro de tiempos y clasificaci√≥n b√°sica. Se aceptan repositorios (GitHub/ZIP), demo en video y un resumen de m√°ximo 2 p√°ginas.",
      validacion: "El jurado validar√° reconocimiento de BIB, registro de tiempos y generaci√≥n de resultados preliminares. Se dar√° prioridad a evidencias en tiempo real (capturas, simulaci√≥n o demo).",
      propiedadIntelectual: "Los derechos de autor corresponden a los equipos; la organizaci√≥n podr√° difundir los proyectos con fines acad√©micos mencionando a los autores.",
      compromisoEtico: "Se exige originalidad y uso legal de librer√≠as/datasets; est√° prohibido el plagio sin mejoras significativas.",
      usoMarca: "El logotipo del evento e instituci√≥n podr√° usarse √∫nicamente en el marco del evento; se autoriza registro audiovisual para memoria institucional."
    }
  }
}

];

const Tracks: React.FC = () => {
  // Estado para manejar el track seleccionado y la visibilidad del modal
  const [selectedTrack, setSelectedTrack] = useState<typeof tracksData[0] | null>(null);

  // Funci√≥n para abrir el modal con los datos del track seleccionado
  const handleOpenModal = (track: typeof tracksData[0]) => {
    if (track.details) { // Solo abre el modal si el track tiene detalles
      setSelectedTrack(track);
    }
  };

  // Funci√≥n para cerrar el modal
  const handleCloseModal = () => {
    setSelectedTrack(null);
  };

  return (
    <>
      <section id="tracks" className="section-padding bg-[#111]">
        <div className="container mx-auto">
          <h2 className="section-title">Track's</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {tracksData.map((track) => (
              <div 
                key={track.title} 
                className="bg-[#1a1a1a] p-8 rounded-xl border border-gray-800 card-hover-effect text-center flex flex-col items-center h-full cursor-pointer"
                onClick={() => handleOpenModal(track)}
              >
                <div className="text-5xl mb-5">{track.icon}</div>
                <h3 className="text-xl font-bold mb-2">{track.title}</h3>
                <p className="font-semibold text-cyan-500 mb-4 text-sm">{track.company}</p>
                <p className="text-gray-400 flex-grow">{track.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Renderizamos el modal y le pasamos los datos y la funci√≥n de cierre */}
      <TrackModal track={selectedTrack} onClose={handleCloseModal} />
    </>
  );
};

export default Tracks;